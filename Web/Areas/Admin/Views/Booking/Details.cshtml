@using Model.Enum
@using Web.Security
@using Web.SingleTon
@model Model.ViewModels.BookingDetailsViewModel
@{
    ViewBag.Title = "Details";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header" data-background-color="purple">
                    <h4 class="title">Booking Details <span style="float: right">Status: @Enum.GetName(typeof(Enums.OrderStatus), Model.Order.OrderStatus)</span></h4>
                    <p class="category">Order ID: @Model.Order.IdOrder</p>

                </div>
                <div class="card-content">

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group label-floating">
                                <label class="control-label">Branch</label>
                                @*<input type="text" class="form-control" disabled>*@
                                @BranchSingleTon.GetAddress(Model.Order.IdBranch)
                            </div>
                        </div>
                        <div class="col-md-6">
                            @if (SessionPersister.MenuLayoutVisibility.Order.Update)
                            {
                                if (Model.Order.OrderStatus == (int) Enums.OrderStatus.New)
                                {
                                    <a href="@Url.Action("Update", "Booking", new {id = Model.Order.IdOrder})">
                                        <div class="btn btn-warning pull-right">
                                            Update
                                        </div>
                                    </a>
                                }
                                if (Model.Order.OrderStatus == (int)Enums.OrderStatus.New)
                                {
                                    <a href="@Url.Action("Verify", "Booking", new {id = Model.Order.IdOrder})">
                                        <div class="btn btn-success pull-right">
                                            Verify
                                        </div>
                                    </a>
                                }

                                if (Model.Order.OrderStatus == (int)Enums.OrderStatus.Verified)
                                {
                                    <a href="@Url.Action("Complete", "Booking", new {id = Model.Order.IdOrder})" onclick="return confirm('This order is completed?');">
                                        <div class="btn btn-success pull-right">
                                            Completed
                                        </div>
                                    </a>
                                }
                                if (Model.Order.OrderStatus == (int)Enums.OrderStatus.New || Model.Order.OrderStatus == (int)Enums.OrderStatus.Verified)
                                {
                                    <a href="@Url.Action("Cancel", "Booking", new {id = Model.Order.IdOrder})" onclick="return confirm('Are you sure?');">
                                        <div class="btn btn-danger pull-right">
                                            Cancel
                                        </div>
                                    </a>
                                }
                                if (Model.Order.OrderStatus == (int)Enums.OrderStatus.Cancel)
                                {
                                    <a href="@Url.Action("Refund", "Booking", new {id = Model.Order.IdOrder})" onclick="return confirm('Refund to this Order?');">
                                        <div class="btn btn-default pull-right">
                                            Refund
                                        </div>
                                    </a>
                                }
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group label-floating">
                                <label class="control-label">Time in</label>
                                @Html.TextBoxFor(b => b.Order.BeginTime, new { @class = "form-control", @readonly = true })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group label-floating">
                                <label class="control-label">Time out</label>
                                @Html.TextBoxFor(b => b.Order.EndTime, new { @class = "form-control", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group label-floating">
                                <label class="control-label">Number Of Customer</label>
                                @Html.TextBoxFor(b => b.Order.NumberOfCustomer, new { @class = "form-control", @readonly = true })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group label-floating">
                                <label class="control-label">Number Of Table</label>
                                @Html.TextBoxFor(b => b.Order.NumberOfTable, new { @class = "form-control", @readonly = true })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group label-floating">
                                <label class="control-label">Deposit ($)</label>
                                @Html.TextBoxFor(b => b.Order.Deposit, new { @class = "form-control", @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Description</label>
                                <div class="form-group label-floating">
                                    @Html.TextAreaFor(b => b.Order.Description, new { @class = "form-control", @rows = 5, @readonly = true })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="clearfix"></div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card card-profile">
                <div class="card-avatar">
                    <a href="#pablo">
                        <img class="img" src="~/Content/admin/img/user.png" />
                    </a>
                </div>
                <div class="content">
                    @*<h6 class="category text-gray">CEO / Co-Founder</h6>*@
                    <h4 class="card-title">@Model.Customer.FullName</h4>
                    <p class="card-content">
                        CMND: @Model.Customer.CMND
                    </p>
                    <p class="card-content">
                        Phone: @Model.Customer.Phone
                    </p>
                    <p class="card-content">
                        Address: @Model.Customer.Address
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

