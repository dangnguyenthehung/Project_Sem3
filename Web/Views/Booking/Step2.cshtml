@using Web.SingleTon
@model Model.ViewModels.OrderViewModel
@{
    ViewBag.Title = "Step2";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var tableType = Model.ListAvailableTables.GroupBy(t => t.IdTableType).Select(gr => gr.ToList()).ToList();

    var GioHienTai = DateTime.Now.TimeOfDay.Hours;
    var GioDefault = "9:00";

    GioHienTai = GioHienTai + 2;
    if (GioHienTai > 22)
    {
        GioDefault = "9:00";
    }
    else
    {
        GioDefault = GioHienTai.ToString() + ":00";
    }
    var ListGio = new SelectList(new List<SelectListItem>
    {
        new SelectListItem { Text = "6:00", Value = "6:00" },
        new SelectListItem { Text = "6:30", Value = "6:30" },
        new SelectListItem { Text = "7:00", Value = "7:00" },
        new SelectListItem { Text = "7:30", Value = "7:30" },
        new SelectListItem { Text = "8:00", Value = "8:00" },
        new SelectListItem { Text = "8:30", Value = "8:30" },
        new SelectListItem { Text = "9:00", Value = "9:00"},
        new SelectListItem { Text = "9:30", Value = "9:30" },
        new SelectListItem { Text = "10:00", Value = "10:00" },
        new SelectListItem { Text = "10:30", Value = "10:30" },
        new SelectListItem { Text = "11:00", Value = "11:00" },
        new SelectListItem { Text = "11:30", Value = "11:30" },
        new SelectListItem { Text = "12:00", Value = "12:00" },
        new SelectListItem { Text = "12:30", Value = "12:30" },
        new SelectListItem { Text = "13:00", Value = "13:00" },
        new SelectListItem { Text = "13:30", Value = "13:30" },
        new SelectListItem { Text = "14:00", Value = "14:00" },
        new SelectListItem { Text = "14:30", Value = "14:30" },
        new SelectListItem { Text = "15:00", Value = "15:00" },
        new SelectListItem { Text = "15:30", Value = "15:30" },
        new SelectListItem { Text = "16:00", Value = "16:00" },
        new SelectListItem { Text = "16:30", Value = "16:30" },
        new SelectListItem { Text = "17:00", Value = "17:00" },
        new SelectListItem { Text = "17:30", Value = "17:30" },
        new SelectListItem { Text = "18:00", Value = "18:00" },
        new SelectListItem { Text = "18:30", Value = "18:30" },
        new SelectListItem { Text = "19:00", Value = "19:00" },
        new SelectListItem { Text = "19:30", Value = "19:30" },
        new SelectListItem { Text = "20:00", Value = "20:00" },
        new SelectListItem { Text = "20:30", Value = "20:30" },
        new SelectListItem { Text = "21:00", Value = "21:00" },
        new SelectListItem { Text = "21:30", Value = "21:30" },
        new SelectListItem { Text = "22:00", Value = "22:00" }
    }, "Value", "Text", GioDefault.ToString());
}

<div class="container" >
    <div class="bookingTab">
        <h1 style="text-align: center; color: white"><b>Booking Table</b></h1>
        <button class="tablink" onclick="openPage('Home', this, 'rgba(231, 76, 60,1.0)')" id="defaultOpen">Infomation</button>
        <button class="tablink" onclick="openPage('News', this, 'rgba(230, 126, 34,1.0)')" >Booking Infomation</button>
        

        <div id="Home" class="tabcontent">
            <div class="w3-row-padding" style="margin-left: 30%">
                
                <div class="w3-third w3-container w3-margin-bottom" style="width: 70%">
                    <h6>Chi nhánh</h6>
                    <div class="input-group form-group-no-border">
                        <span class="input-group-addon">
                            <i class="now-ui-icons users_circle-08"></i>
                        </span>
                        <input type="text" class="form-control" placeholder="Chi nhánh..." value="@Model.Order.IdBranch" style="color:aliceblue" readonly>
                    </div>
                </div>
            </div>
        </div>

        <div id="News" class="tabcontent">
            <div class="w3-row-padding">
                @using (Html.BeginForm("Step2", "Booking", FormMethod.Post))
                {
                    @Html.HiddenFor(m => m.Order.BeginTime)
                    @Html.HiddenFor(m => m.Order.IdBranch)
                    @Html.HiddenFor(m => m.Order.IdCustomer)
                    foreach (var group in tableType)
                    {
                        var capacity = TableTypeSingleTon.GetCapacity(group.First().IdTableType);
                        <div class="w3-third w3-container w3-margin-bottom">
                            <img src="~/Content/assets/image/table2.jpg" alt="TABLE FOR 2 PEOPLE"
                                 class="w3-animate-opacity">
                            <div class="w3-container">
                                <p style="margin-top: 10px; font-size: 1em"><b>BÀN @capacity NGƯỜI</b>
                                </p>
                                <p><b>Số lượng bàn còn trống: @group.Count</b>
                                </p>
                                @foreach (var item in group)
                                {
                                    var tableId = "table" + item.IdTable;
                                    <div class="checkbox">
                                        <input name="ListIdTable" type="checkbox" id="@tableId" value="@item.IdTable"/>
                                        <label for="@tableId">
                                            Bàn số @item.TableNumber
                                        </label>
                                    </div>

                                }
                            </div>
                        </div>

                    }
                    <div class="w3-third w3-container w3-margin-bottom">
                        <div class="form-group">
                            <div class='input-group'>
                                @Html.TextBoxFor(m => m.Order.NumberOfCustomer, new { @class = "form-control", @id = "BeginTime", @style = "padding-left: 5px" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class='input-group'>
                                @Html.DropDownList("BeginTime", ListGio, new {@class = "form-control", @id = "BeginTime", @style = "padding-left: 5px"})
                            </div>
                        </div>
                        <div class="form-group">
                            <div class='input-group'>
                                @Html.DropDownList("EndTime", ListGio, new {@class = "form-control", @id = "EndTime", @style = "padding-left: 5px"})
                            </div>
                        </div>
                        <div class="form-group">
                            <div class='input-group'>
                                @Html.TextAreaFor(m => m.Order.Description, new { @class = "form-control", @rows = 5, @style = "padding-left: 5px" })
                            </div>
                        </div>
                    </div>
                        <div class="col-xs-12">
                            <input type="submit" value="Submit" class="btn btn-success" />
                        </div>
                        }


                        <a style="margin-left: 40%" href="nucleo-icons.html" class="btn btn-primary btn-round btn-lg" target="_blank">View Demo Icons</a>
                    </div>
        </div>


     
    </div>
 </div>
   

<script src="~/Scripts/SelectTable.js"></script>



<script>
    function openPage(pageName, elmnt, color) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablink");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].style.backgroundColor = "";
        }
        document.getElementById(pageName).style.display = "block";
        elmnt.style.backgroundColor = color;

    }
    // Get the element with id="defaultOpen" and click on it
    document.getElementById("defaultOpen").click();
</script>